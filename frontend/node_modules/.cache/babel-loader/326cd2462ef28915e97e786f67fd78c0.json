{"ast":null,"code":"export const initialState = {\n  cart: [],\n  user: null\n}; //selector\n\nexport const getTotal = cart => cart === null || cart === void 0 ? void 0 : cart.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return { ...state,\n        cart: [...state.cart, action.item]\n      };\n\n    case \"REMOVE_FROM_CART\":\n      const index = state.cart.findIndex(cartItem => cartItem.id === action.id);\n      let newCart = [...state.cart];\n\n      if (index >= 0) {\n        newCart.splice(index, 1);\n      } else {\n        console.warn(`Cant remove (id: ${action.id}) as its not in cart!`);\n      }\n\n      return { ...state,\n        cart: newCart\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    case \"EMPTY_CART\":\n      return { ...state,\n        cart: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/cmpProject/E-Commerce/ecommerce-spring/frontend/src/component/reducer.js"],"names":["initialState","cart","user","getTotal","reduce","amount","item","price","reducer","state","action","type","index","findIndex","cartItem","id","newCart","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB,C,CAKP;;AACA,OAAO,MAAMC,QAAQ,GAAIF,IAAD,IACtBA,IADsB,aACtBA,IADsB,uBACtBA,IAAI,CAAEG,MAAN,CAAa,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA5C,EAAoD,CAApD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELR,QAAAA,IAAI,EAAE,CAAC,GAAGQ,KAAK,CAACR,IAAV,EAAgBS,MAAM,CAACJ,IAAvB;AAFD,OAAP;;AAIF,SAAK,kBAAL;AACE,YAAMM,KAAK,GAAGH,KAAK,CAACR,IAAN,CAAWY,SAAX,CACXC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBL,MAAM,CAACK,EADzB,CAAd;AAIA,UAAIC,OAAO,GAAG,CAAC,GAAGP,KAAK,CAACR,IAAV,CAAd;;AACA,UAAIW,KAAK,IAAI,CAAb,EAAgB;AACdI,QAAAA,OAAO,CAACC,MAAR,CAAeL,KAAf,EAAsB,CAAtB;AACD,OAFD,MAEO;AACLM,QAAAA,OAAO,CAACC,IAAR,CAAc,oBAAmBT,MAAM,CAACK,EAAG,uBAA3C;AACD;;AAED,aAAO,EACL,GAAGN,KADE;AAELR,QAAAA,IAAI,EAAEe;AAFD,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFR,OAAP;;AAIF,SAAK,YAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYR,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AACF;AACE,aAAOQ,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  cart: [],\r\n  user: null,\r\n};\r\n\r\n//selector\r\nexport const getTotal = (cart) =>\r\n  cart?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\":\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.item],\r\n      };\r\n    case \"REMOVE_FROM_CART\":\r\n      const index = state.cart.findIndex(\r\n        (cartItem) => cartItem.id === action.id\r\n      );\r\n\r\n      let newCart = [...state.cart];\r\n      if (index >= 0) {\r\n        newCart.splice(index, 1);\r\n      } else {\r\n        console.warn(`Cant remove (id: ${action.id}) as its not in cart!`);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        cart: newCart,\r\n      };\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"EMPTY_CART\":\r\n      return { ...state, cart: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}